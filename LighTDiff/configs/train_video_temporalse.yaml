name: LighTDiff_Video_TSE_Train
model_type: LighTDiff
num_gpu: 1
manual_seed: 42
is_train: true

# ===================== Datasets =====================
datasets:
  train:
    name: train
    type: VideoWindowMP4Dataset
    phase: train
    root_lr: E:/ELEC5020/LighTDiff-main/LighTDiff-main/dataset/video/train/low
    root_hr: E:/ELEC5020/LighTDiff-main/LighTDiff-main/dataset/video/train/high
    lr_prefix: "lum_contrast"
    clip_len: 5
    center_index: 2
    crop_size: [256, 256]            
    hflip: true
    vflip: false
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 1            # ok for 4070ti
    prefetch_mode: ~
    pin_memory: false
    persistent_workers: false

  val:
    name: validation
    type: VideoWindowMP4Dataset
    phase: val
    root_lr: E:/ELEC5020/LighTDiff-main/LighTDiff-main/dataset/video/val/low
    root_hr: E:/ELEC5020/LighTDiff-main/LighTDiff-main/dataset/video/val/high
    lr_prefix: "lum_contrast"
    clip_len: 5
    center_index: 2
    crop_size: ~
    hflip: false
    vflip: false
    num_worker_per_gpu: 2
    batch_size_per_gpu: 1

# ===================== Networks =====================
network_unet:
  type: TLBNet
  in_channel: 6
  out_channel: 3
  inner_channel: 64
  norm_groups: 32
  channel_mults: [1, 2, 4]
  attn_res: [16]
  res_blocks: 2
  dropout: 0.2
  divide: 16
  use_tlu: True

network_temporal_backbone:
  type: BasicVSRNet
  num_feat: 48
  num_block: 7
  num_reconstruct_block: 3
  center_frame_idx: 2
  residual: true

network_global_corrector:
  type: SpatialControlModule
  normal01: true

network_ddpm:
  type: GaussianDiffusion
  image_size: 256
  channels: 3
  conditional: true
  color_limit: -1
  structure: [1, 2, 2, 2]

ddpm_schedule:
  schedule: "linear"
  n_timestep: 2000
  linear_start: !!float 1e-6
  linear_end: !!float 1e-2

# ===================== Paths =====================
path:
  pretrain_network_g: ~
  param_key_g: params
  strict_load_g: False
  pretrain_network_d: ~
  resume_state: ~
  ignore_resume_networks: ['network_identity']

# ===================== Train =====================
train:
  use_temporal_se: true        # <<<< turn on temporal SE module
  cs_on_shift: true
  vis_train: true
  vis_num: 150
  train_type: lighT_structure
  t_border: 1000
  input_mode: crop
  crop_size: [256, 256]

  optim_g:
    type: Adam
    lr: !!float 1e-4

  optim_temporal:
    type: Adam
    lr: !!float 5e-5

  scheduler:
    type: MultiStepLR
    milestones: [45000, 90000, 120000]
    gamma: 0.3

  total_iter: 150000
  warmup_iter: -1  # no warm up

  early_stop:
    metric: lpips                 
    better: lower                 
    patience: 3                   
    min_delta: 0.0005             
    dataset: validation           

  temporal_backbone_reg_w: 0.05

# ===================== Validation =====================
val:
  split_log: false
  fix_seed: true
  color_gamma: 1.0
  use_up_v2: true
  structure: [1, 2, 2, 2]
  ddim_eta: !!float 1.0
  ddim_timesteps: 4
  use_kind_align: false
  cal_all: true
  show_all: true
  val_freq: !!float 4000
  save_img: true

metrics:
    psnr:
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim        
      crop_border: 0                
      test_y_channel: false        
    lpips:
      type: calculate_lpips_lol

# ===================== Logger / Dist =====================
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 4000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

dist_params:
  backend: nccl
  port: 29500

find_unused_parameters: true
